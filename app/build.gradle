apply plugin: 'com.android.application'
// add after applying plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.jakewharton.hugo'
//apply plugin: 'kotlin-android'


buildscript {
    ext {
        support_version = '24.0.0'
        kotlin_version = '1.0.2'
        anko_version = '0.8.3'
        retrofit_version = '2.0.2'
        okhttp_version = '3.2.0'
        dagger_version = '2.4'
        retrolambda_version = '3.2.5'
        rxbinding_version = '0.4.0'
        rxlifecycle_version = '0.6.1'
        rxkotlin_version = '0.55.0'
        moshi_version = '1.1.0'
        picasso_version = '2.5.2'
        reactivenetwork_version = '0.2.0'
        flexbox_version = '0.1.3'
        wilddog_version = '0.6.1'
        firebase_version = '9.0.2'
        leakcanary_version = '1.4-beta2'
        rxjavadebug_version = '1.0.3'
        autovalue_version = '1.2'
        paperparcel_version = '1.0.0'
    }

    repositories {
        jcenter()
        mavenCentral()
    }

}
android {

    compileSdkVersion 24
    buildToolsVersion "24"
    defaultConfig {
        applicationId "com.soulkey.calltalent"
        minSdkVersion 15
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/maven/com.squareup.okio/okio/pom.xml'
        exclude 'META-INF/maven/com.squareup.okio/okio/pom.properties'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    // Google's Dependency Injection Framework to decouple the logic

    // apt command comes from the android-apt plugin
    apt "com.google.dagger:dagger-compiler:$dagger_version"
    compile "com.google.dagger:dagger:$dagger_version"
    provided 'javax.annotation:jsr250-api:1.0'
    //  a bunch of helper methods to write Data and Parcelable classes
    provided "com.google.auto.value:auto-value:$autovalue_version"
    apt "com.google.auto.value:auto-value:$autovalue_version"
    compile "com.github.grandstaish.paperparcel:paperparcel:$paperparcel_version"
    apt "com.github.grandstaish.paperparcel:compiler:$paperparcel_version"
    //    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    //    compile "org.jetbrains.anko:anko-sdk15:$anko_version" // So here it's 15 too

    //Compatibility
    //Design Support Library depends on v4 and v7
    //adding it will automatically introduce v4 and v7
    compile "com.android.support:design:$support_version"
//    compile "com.android.support:appcompat-v7:$support_version"
    compile "com.android.support:percent:$support_version"
    //    uncomment the following line to enable the flexbox layout
    //    compile "com.google.android:flexbox:$flexbox_version"

    //    compile "com.android.support:recyclerview-v7:$support_version"

    //    compile "com.android.support:cardview-v7:$support_version"

    //Anko

    //    compile "org.jetbrains.anko:anko-appcompat-v7:$anko_version"

    //    compile "org.jetbrains.anko:anko-design:$anko_version"

    //    compile "org.jetbrains.anko:anko-recyclerview-v7:$anko_version"

    //    compile "org.jetbrains.anko:anko-cardview-v7:$anko_version"

    //    compile "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    //    compile "com.squareup.okhttp3:okhttp:$okhttp_version"

    //Retrofit2 is a library to minimize the code to handle RESTful services

    //    compile "com.squareup.retrofit2:adapter-rxjava:$retrofit_version"

    //    compile "com.squareup.retrofit2:converter-moshi:$retrofit_version"

    //    compile "com.squareup.retrofit2:retrofit:$retrofit_version"

    //    compile "com.github.pwittchen:reactivenetwork:$reactivenetwork_version"

    //    compile "io.reactivex:rxkotlin:$rxkotlin_version"
    compile "com.jakewharton.rxbinding:rxbinding:$rxbinding_version"
    compile "com.jakewharton.rxbinding:rxbinding-appcompat-v7:$rxbinding_version"
    //    compile "com.jakewharton.rxbinding:rxbinding-recyclerview-v7:$rxbinding_version"

    // RxLifeCycle is a helper library to make Rx play nice with android lifecycle
    compile "com.trello:rxlifecycle:$rxlifecycle_version"
    // If you want pre-written Activities and Fragments you can subclass as providers
    compile "com.trello:rxlifecycle-components:$rxlifecycle_version"
    //RxPermissions
    compile 'com.tbruyelle.rxpermissions:rxpermissions:0.7.0@aar'
    compile 'com.ragnarok.rxcamera:lib:0.0.3'

    compile "com.basgeekball:awesome-validation:1.3"
    //    compile "com.squareup.moshi:moshi:$moshi_version"

    //    compile "com.squareup.picasso:picasso:$picasso_version"

    //debugCompile "io.reactivex:rxjava-debug:$rxjavadebug_version"

    //    Chinese alternative of Google's Firebase
    compile "com.wilddog:wilddog-client-android:$wilddog_version"

    //    Google's Realtime data and Analytic platform
//    PlayCompile "com.google.firebase:firebase-database:$firebase_version"
//    PlayCompile "com.google.firebase:firebase-core:$firebase_version"
//    PlayCompile "com.google.firebase:firebase-auth:$firebase_version"

    //LeakCanary is a framework to help detect the memory leak and then find out the root causes
    debugCompile "com.squareup.leakcanary:leakcanary-android:$leakcanary_version"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanary_version"
    testCompile 'junit:junit:4.12'
    testCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanary_version"
}

// Add to the bottom of the file
//apply plugin: 'com.google.gms.google-services'
apply plugin: 'me.tatarka.retrolambda'